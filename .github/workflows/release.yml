name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4

      - name: Get tag name
        id: tag_name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
          name: PReviewer ${{ steps.tag_name.outputs.TAG_NAME }}
          draft: false
          prerelease: ${{ contains(steps.tag_name.outputs.TAG_NAME, '-') }}
          generate_release_notes: true

  build-and-release:
    needs: create-release
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
            artifact_name: "*.exe"
          - os: macos-latest
            platform: macos
            artifact_name: "*.dmg"
          - os: ubuntu-latest
            platform: linux
            artifact_name: "*.AppImage"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and package
        run: npm run make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find release assets (Windows)
        if: matrix.platform == 'windows'
        id: find_assets_windows
        shell: bash
        run: |
          asset_path=$(find out/make -name "*.exe" | head -1)
          echo "asset_path=$asset_path" >> $GITHUB_OUTPUT
          echo "asset_name=$(basename $asset_path)" >> $GITHUB_OUTPUT

      - name: Find release assets (macOS)
        if: matrix.platform == 'macos'
        id: find_assets_macos
        run: |
          asset_path=$(find out/make -name "*.dmg" | head -1)
          echo "asset_path=$asset_path" >> $GITHUB_OUTPUT
          echo "asset_name=$(basename $asset_path)" >> $GITHUB_OUTPUT

      - name: Find release assets (Linux)
        if: matrix.platform == 'linux'
        id: find_assets_linux
        run: |
          asset_path=$(find out/make -name "*.AppImage" | head -1)
          echo "asset_path=$asset_path" >> $GITHUB_OUTPUT
          echo "asset_name=$(basename $asset_path)" >> $GITHUB_OUTPUT

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-release.outputs.tag_name }}
          files: |
            ${{ steps.find_assets_windows.outputs.asset_path }}
            ${{ steps.find_assets_macos.outputs.asset_path }}
            ${{ steps.find_assets_linux.outputs.asset_path }}